{"name":"Shaft","tagline":"An SSH tunnel assistant for the command line.","body":"# Shaft - right on.\r\n\r\n<img src=\"http://n0nick.net/n0/img/items/Shaft_logo.svg\" alt=\"Shaft\" width=\"500\">\r\n\r\nAn SSH tunnel assistant for the command line.\r\n\r\n\r\n## Installation\r\n\r\nAs easy as:\r\n\r\n    $ gem install shaft\r\n\r\n## Usage\r\n\r\nYour tunnel configurations need to be stored as records in\r\na [YAML](http://www.yaml.org) formatted `~/.shaft` file.\r\n\r\nSee 'Configuration' for instructions on how to format these\r\nfiles.\r\n\r\n* Use `shaft all` to get a list of all available tunnels.\r\n* Use `shaft active` to see which tunnels are currently active.\r\n  - You could use the `--short` option to get only the names\r\n    of those lines (this could be useful to insert into your\r\n    shell prompt. Just saying).\r\n* `shaft start [NAME]` would start the tunnel of the same name.\r\n* `shaft stop [NAME]` would stop the tunnel of the given name.\r\n\r\n## Configuration\r\n\r\nThe SSH tunnels configuration Shaft will use are all stored in\r\na single YAML file under `~/.shaft`.\r\n\r\nEach tunnel is represented by a key defining its name, followed\r\nby an object describing all of the required parameters.\r\n\r\nAn example configuration would be:\r\n\r\n    foobar:\r\n        port: 22\r\n        username: user\r\n        host: remote-host\r\n        bind:\r\n          client-port: 9999\r\n          host: host\r\n          host-port: 8888\r\n\r\nCalling Shaft with `$ shaft start foobar` would be equivalent\r\nto running:\r\n\r\n      $ ssh -N -p 22 user@remote-host -L 9999:host:8888\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}